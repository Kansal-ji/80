{"ast":null,"code":"var _jsxFileName = \"/Users/yashkansal/Desktop/80/Frontend Test Submission/src/components/URLStats.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction URLStats() {\n  _s();\n  const [shortcode, setShortcode] = useState('');\n  const [stats, setStats] = useState(null);\n  const fetchStats = async () => {\n    try {\n      const res = await fetch(`${config.baseURL}/shorturls/${shortcode}`, {\n        headers: {\n          clientid: config.clientID,\n          clientsecret: config.clientSecret\n        }\n      });\n      const data = await res.json();\n      setStats(data);\n    } catch (err) {\n      console.error('Error fetching stats:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fetch URL Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Shortcode\",\n      value: shortcode,\n      onChange: e => setShortcode(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchStats,\n      children: \"Get Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), stats && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Original URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this), \" \", stats.url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Created At:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }, this), \" \", stats.createdAt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Expires At:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 14\n        }, this), \" \", stats.expiry]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Clicks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 14\n        }, this), \" \", stats.clicks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Click Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: stats.clickStats.map((click, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [click.timestamp, \" - IP: \", click.ip, \" - Referer: \", click.referer]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(URLStats, \"Y1EgoymbjY1ejSOvnLS9cn5GsQo=\");\n_c = URLStats;\nexport default URLStats;\nvar _c;\n$RefreshReg$(_c, \"URLStats\");","map":{"version":3,"names":["React","useState","config","jsxDEV","_jsxDEV","URLStats","_s","shortcode","setShortcode","stats","setStats","fetchStats","res","fetch","baseURL","headers","clientid","clientID","clientsecret","clientSecret","data","json","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","url","createdAt","expiry","clicks","clickStats","map","click","index","timestamp","ip","referer","_c","$RefreshReg$"],"sources":["/Users/yashkansal/Desktop/80/Frontend Test Submission/src/components/URLStats.js"],"sourcesContent":["import React, { useState } from 'react';\nimport config from '../config';\n\nfunction URLStats() {\n  const [shortcode, setShortcode] = useState('');\n  const [stats, setStats] = useState(null);\n\n  const fetchStats = async () => {\n    try {\n      const res = await fetch(`${config.baseURL}/shorturls/${shortcode}`, {\n        headers: {\n          clientid: config.clientID,\n          clientsecret: config.clientSecret,\n        },\n      });\n      const data = await res.json();\n      setStats(data);\n    } catch (err) {\n      console.error('Error fetching stats:', err);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Fetch URL Stats</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter Shortcode\"\n        value={shortcode}\n        onChange={(e) => setShortcode(e.target.value)}\n      />\n      <button onClick={fetchStats}>Get Stats</button>\n\n      {stats && (\n        <div>\n          <p><strong>Original URL:</strong> {stats.url}</p>\n          <p><strong>Created At:</strong> {stats.createdAt}</p>\n          <p><strong>Expires At:</strong> {stats.expiry}</p>\n          <p><strong>Total Clicks:</strong> {stats.clicks}</p>\n\n          <h4>Click Details:</h4>\n          <ul>\n            {stats.clickStats.map((click, index) => (\n              <li key={index}>\n                {click.timestamp} - IP: {click.ip} - Referer: {click.referer}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default URLStats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}